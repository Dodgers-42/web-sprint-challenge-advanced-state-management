Sprint Questions

1.What problem does the context API help solve?

The Context API was created to solve a specific problem in react, sharing state down a component tree. Similar to the solution that Redux and React-Redux libraries solve, this solution prevents prop drilling.

2.In your own words, describe actions, reducers and the store and their role in Redux. What does each piece do? Why is the store known as a 'single source of truth' in a redux application?

Store- that holds the state of your application

Action- that describes the change in the state of the application

Reducer- which actually carries out the state

It means that there is only one place which represents state of application, and your UI listens to it. ... In React-Redux applications, when your Redux is a single source of truth, it means that the only way to change your data in UI is to dispatch redux action which will change state within redux reducer.

3.What is the difference between Application state and Component state? When would be a good time to use one over the other?

State is nothing but the state of the application at a given point of time. Generally component state is stored locally within a component and is not accessible from other components unless it's explicitly passed as props to it's sub components.

4.Describe redux-thunk, what does it allow us to do? How does it change our action-creators?

Redux Thunk is a middleware that lets you call action creators that return a function instead of an action object. That function receives the store's dispatch method, which is then used to dispatch regular synchronous actions inside the body of the function once the asynchronous operations have completed.

What is your favorite state management system you've learned and this sprint? Please explain why!

